CREATE OR REPLACE PROCEDURE SEND_EMAIL_SYNCHRO_BATCH(
  N_TBAID                     NUMBER
  ,P_TO                       VARCHAR2
  ,P_PORT                     NUMBER
  ,LV_SMTP_SERVER             VARCHAR2
  ,LV_DOMAIN                 VARCHAR2
  ,LV_FROM                    VARCHAR2
  ,LV_PASSWORD                VARCHAR2
  )
  AS
   V_CONNECTION               UTL_SMTP.CONNECTION;
   V_CLOB                     CLOB;
   LD_DATE                    DATE:=SYSDATE ;
   REQSQL VARCHAR2(1000 );

  TYPE MESSAGE_ERROR IS RECORD
  (
  ACTOR_NUMBER VARCHAR2(4000),
  TABLE_NAME   VARCHAR2(50),
  MESSAGE_ERROR VARCHAR2(2000)

  );

  TYPE ERROR_MSG  IS TABLE OF MESSAGE_ERROR INDEX BY BINARY_INTEGER;
  TAB_MSG_ERR ERROR_MSG;

BEGIN


      V_CLOB := 'TABLE NAME ' || 'CLIENT ID '  || 'ERROR MESSAGE ' || UTL_TCP.CRLF;
      V_CONNECTION := UTL_SMTP.OPEN_CONNECTION (LV_SMTP_SERVER,P_PORT); --TO OPEN THE CONNECTION
      UTL_SMTP.EHLO (V_CONNECTION, LV_DOMAIN);
      UTL_SMTP.AUTH(V_CONNECTION,LV_FROM,LV_PASSWORD , UTL_SMTP.ALL_SCHEMES); -- AUTHENTIFICATION
      UTL_SMTP.MAIL (V_CONNECTION, LV_FROM);
      UTL_SMTP.RCPT (V_CONNECTION, P_TO);-- TO SEND MAIL TO VALID RECEIPENT

      UTL_SMTP.OPEN_DATA (V_CONNECTION);
      UTL_SMTP.WRITE_DATA (V_CONNECTION, 'FROM: ' || LV_FROM || UTL_TCP.CRLF);
      IF TRIM (P_TO) IS NOT NULL
        THEN
          UTL_SMTP.WRITE_DATA (V_CONNECTION, 'TO: ' || P_TO || UTL_TCP.CRLF);
      END IF;

      UTL_SMTP.WRITE_DATA (V_CONNECTION,'SUBJECT: BATCH SYNCHRO ERRORS' || UTL_TCP.CRLF);
      UTL_SMTP.WRITE_DATA (V_CONNECTION,'CONTENT-TYPE: TEXT/PLAIN' || UTL_TCP.CRLF);

      UTL_SMTP.WRITE_DATA(V_CONNECTION,'CONTENT-DISPOSITION: ATTACHMENT; FILENAME= ERR_SYN_DETAILS_'
                                      || TO_CHAR (LD_DATE, 'DD-MON-YYYY HH:MI')
                                      || '.CSV'
                                     -- || ''
                                      || UTL_TCP.CRLF
                          );

      UTL_SMTP.WRITE_DATA (V_CONNECTION, UTL_TCP.CRLF);

      -- GET ERROR POPULATION FOR A SPECIFIC TBAID
      FOR CUR_ERR_SYNC IN (SELECT  TABLE_NAME FROM  ALL_TABLES WHERE TABLE_NAME LIKE 'ERR_SYNC_V4%'
       AND TABLE_NAME NOT IN('ERR_SYNC_V4_ADRESSE','ERR_SYNC_V4_BANQUEGUICHET','ERR_SYNC_V4_CODEPOSTAL','ERR_SYNC_V4_CREDATA','ERR_SYNC_V4_RIB', 'ERR_SYNC_V4_AVACTEUR') )LOOP
   --   DBMS_OUTPUT.PUT_LINE('UR_ERR_SYNC.TABLE_NAME '|| CUR_ERR_SYNC.TABLE_NAME) ;

  REQSQL:=  'SELECT X.ACTID  , ''' ||SUBSTR(CUR_ERR_SYNC.TABLE_NAME,INSTR(CUR_ERR_SYNC.TABLE_NAME,'4',1) +2 ,LENGTH(CUR_ERR_SYNC.TABLE_NAME) - LENGTH('ERR_SYNC_V4_'))||'''  , X.ORA_ERR_MESG$  FROM  ' ||  CUR_ERR_SYNC.TABLE_NAME   || '@SGM_V40 ' || ' X WHERE ORA_ERR_TAG$ =  ' || N_TBAID;

      dbms_output.put_line(REQSQL)   ;
      EXECUTE IMMEDIATE REQSQL    BULK COLLECT INTO TAB_MSG_ERR ;

    --  END LOOP ;
        IF (TAB_MSG_ERR.COUNT>0) THEN
          FOR I IN TAB_MSG_ERR.FIRST..TAB_MSG_ERR.LAST LOOP
            BEGIN
               V_CLOB := TAB_MSG_ERR(I).TABLE_NAME || ',' || TAB_MSG_ERR(I).ACTOR_NUMBER  || ',' || TAB_MSG_ERR(I).MESSAGE_ERROR  || UTL_TCP.CRLF;
            EXCEPTION
            WHEN OTHERS
            THEN
            DBMS_OUTPUT.PUT_LINE ( SQLERRM);
            END;
          END LOOP;
        END IF ;

  UTL_SMTP.WRITE_DATA (V_CONNECTION, V_CLOB); --WRITING DATA IN CSV ATTACHMENT.
 END LOOP ;
   UTL_SMTP.WRITE_DATA (V_CONNECTION, UTL_TCP.CRLF);
  UTL_SMTP.CLOSE_DATA (V_CONNECTION);
  UTL_SMTP.QUIT (V_CONNECTION);
  --COMMIT;
  /*EXCEPTION
  WHEN OTHERS
  THEN
  DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;   */

END ;